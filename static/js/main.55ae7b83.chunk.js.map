{"version":3,"sources":["content/editToDoPoint/editToDoPoint.module.css","content/ToDoPost/todopost.module.css","Header/header.jsx","Header/headerContainer.jsx","API/API.js","redux/authReducers.js","content/validators/validators.js","content/ToDoPost/toDoPost.jsx","content/Login/login.jsx","content/registrationPage/registrationPage.jsx","redux/toDoReducer.js","content/ToDoPost/toDoPostContainer.jsx","content/Complete_uncomplete/complete/CompleteWork.jsx","content/Complete_uncomplete/complete/CompleteWorkContainer.jsx","content/Complete_uncomplete/uncomplete/UnCompleteWork.jsx","content/Complete_uncomplete/uncomplete/UnCompleteWorkContainer.jsx","content/Complete_uncomplete/batchDelete.jsx","content/mainPage.jsx","content/editToDoPoint/existDataOfEditPoint.jsx","content/editToDoPoint/datapicker.jsx","content/editToDoPoint/editToDoPoint.jsx","content/editToDoPoint/editToDoPointComponent.jsx","App.js","reportWebVitals.js","redux/reduxStore.js","index.js","content/registrationPage/registration.module.css","content/mainpage.module.css","Header/header.module.css","content/Login/login.module.css"],"names":["module","exports","Header","props","className","s","header","loginBlock","isAuth","TextField","id","value","userData","first_name","last_name","variant","to","Button","color","HeaderContainer","this","React","Component","connect","state","auth","instanse","axios","baseURL","contactsAPI","email","password","post","then","response","password_confirmation","contact_id","get","title","description","priority","done","due_date","patch","delete","SET_CONTACT_DATA","initialState","authReducer","action","type","data","requiredRieldValidator","maxLengthValidator","maxLength","length","numberValidator","isNaN","Number","undefined","maxLength100","renderTextField","label","input","meta","touched","invalid","error","custom","placeholder","helperText","MyWorkRedux","reduxForm","form","onSubmit","handleSubmit","Field","field","validate","name","component","button","WorkContainerComponent","values","addPost","userId","newPost","LoginReduxForm","fields","LoginContainer","setLogIn","dispatch","status","setContactData","login","RegistrationContainer","setRegistration","ADD_WORK","SET_TODO_EDIT_POINT","SET_TODOLIST","SET_EDIT_ELEMENT","DELETE_EDIT_ELEMENT","CHANGE_BATCH_DELETE","CHANGE_BATCH_DELETE_ALL","SORT_ALL","changeBatchDeleteAll","editedElement","newWork","uncomplete","complete","setEditedElement","element","deleteWorkActionCreator","batchDeleteActionCreator","EditToDoPointThunk","el","setToDoEditPoint","deleteToDoPointThunk","toDoReducer","stateCopy","sort","a","b","map","batchDelete","newToDoPoint","push","filter","MyPostsContainer","point","CompleteWork","todo","onClick","EditedElement","EditToDoPoint","deleteToDoPoint","Checkbox","checked","onChange","inputProps","CompleteWorkComponent","toDoPage","UnCompleteWork","UnCompleteWorkComponent","BatchDeleteComponent","toDoPoints","batchDeleteAll","ids","forEach","batchDeleteThunk","deleteList","concat","ToDo","getToDoListThunk","contentWrapper","ToDoContainer","setToDoData","ExistElementContainer","time","substring","Typography","momentLocaliser","moment","min","renderDateTimePicker","showTime","format","Date","minValue","EditToDoForm","EditToDoReduxFormContainer","editElement","EditToDoPointComponent","App","Route","path","render","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","reducers","combineReducers","formReducer","store","createStore","applyMiddleware","thunkMiddleware","window","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.55ae7b83.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contentWrapper\":\"editToDoPoint_contentWrapper__3oKGF\",\"EditToDoReduxFormContainer\":\"editToDoPoint_EditToDoReduxFormContainer__1z5n6\",\"ExistElementContainer\":\"editToDoPoint_ExistElementContainer__14hAa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"field\":\"todopost_field__NZ13t\",\"button\":\"todopost_button__J8bCp\",\"loginBlock\":\"todopost_loginBlock__2KIi8\"};","import React from 'react';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport s from './header.module.css'\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <div className={s.header}>\r\n            <div className={s.loginBlock}>\r\n                {props.isAuth\r\n                    ? <TextField id=\"outlined-basic\" value={props.userData.first_name + \" \" + props.userData.last_name} variant=\"outlined\"/>\r\n                    : <NavLink to={'/login'}><Button variant=\"contained\" color=\"primary\">Login</Button></NavLink>\r\n                }\r\n            </div>\r\n            <div className={s.loginBlock}>\r\n                <NavLink to={'/registrate'}><Button variant=\"contained\" color=\"primary\">Registration</Button></NavLink>\r\n            </div>\r\n            <div className={s.loginBlock}>\r\n                <NavLink to={'/profile'}><Button variant=\"contained\" color=\"primary\">Main Page</Button></NavLink>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default Header;","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport Header from \"./header\";\r\n\r\n\r\n\r\nclass HeaderContainer extends React.Component{\r\n\r\n    render() {\r\n        return(\r\n            <Header {...this.props}/>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    userData: state.auth.userData,\r\n\r\n})\r\n\r\n\r\n\r\nexport default connect(mapStateToProps,{})(HeaderContainer);\r\n\r\n\r\n","import * as axios from \"axios\";\r\n\r\nconst instanse = axios.create({\r\n        baseURL: \"https://to-do-task-server.herokuapp.com/\",\r\n    }\r\n)\r\n\r\nexport const contactsAPI = {\r\n    setContact(email, password) {\r\n        return instanse.post(`sessions`, {email: email, password: password})\r\n            .then(response => response);\r\n    },\r\n    setRegistr(email, password, password_confirmation, first_name, last_name) {\r\n        return instanse.post(`registrations`, {email: email, password: password, password_confirmation: password_confirmation,\r\n            first_name: first_name, last_name: last_name})\r\n            .then(response => response);\r\n    },\r\n    getToDoList(contact_id) {\r\n        return instanse.get(`todo/${contact_id}`)\r\n            .then(response => response);\r\n    },\r\n    editToDoList(id, contact_id, title, description, priority, done, due_date) {\r\n        return instanse.patch(`todo/${id}`, {contact_id: contact_id, title: title, description: description, priority: priority, done: done, due_date: due_date})\r\n            .then(response => response);\r\n    },\r\n    setToDoListPoint(contact_id, title) {\r\n        return instanse.post(`todo`, {contact_id: contact_id, title: title})\r\n            .then(response => response);\r\n    },\r\n    deleteToDoListPoint(id) {\r\n        return instanse.delete(`todo/${id}`)\r\n            .then(response => response);\r\n    },\r\n}","import {contactsAPI} from \"../API/API\";\r\n\r\nconst SET_CONTACT_DATA = 'SET_CONTACT_DATA';\r\n\r\nlet initialState = {\r\n    userData: {id:0},\r\n    isAuth: false\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case SET_CONTACT_DATA:\r\n            return {...state, userData: action.data, isAuth: true}\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport const setContactData = (data) => ({type: SET_CONTACT_DATA, data: data});\r\n\r\n//криейт сешн, получаем токен\r\nexport const setLogIn = (email, password) => (dispatch) => {\r\n    return contactsAPI.setContact(email, password)\r\n        .then(response => {\r\n            if (response.status === 201) {\r\n                let data = response.data\r\n                dispatch(setContactData(data))\r\n            }\r\n        })\r\n}\r\n\r\n//регистрация\r\nexport const setRegistration = (email, password, password_confirmation, first_name, last_name) => (dispatch) => {\r\n    return contactsAPI.setRegistr(email, password, password_confirmation, first_name, last_name)\r\n        .then(response => {\r\n            if (response.status === 201) {\r\n                           }\r\n        })\r\n\r\n}\r\nexport default authReducer;","export const requiredRieldValidator = value => {\r\n    if (value) return undefined;\r\n    return 'This field cant be empty'\r\n}\r\n\r\nexport const maxLengthValidator = (maxLength) => value => {\r\n    if (value && value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n    return undefined;\r\n}\r\n\r\nexport const numberValidator = value => value && isNaN(Number(value)) ? 'Must be a number' : undefined\r\nexport const minValueValidator = min => value =>\r\n    value && value < min ? `Must be at least ${min}` : undefined\r\n\r\n","import React from \"react\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport {requiredRieldValidator, maxLengthValidator} from \"../validators/validators\";\r\nimport s from './todopost.module.css'\r\n\r\nconst maxLength100 = maxLengthValidator(100);\r\n\r\nexport const renderTextField = ({\r\n                             label,\r\n                             input,\r\n                             meta: { touched, invalid, error },\r\n                             ...custom\r\n                         }) => (\r\n    <TextField\r\n        label={label}\r\n        placeholder={label}\r\n        error={touched && invalid}\r\n        helperText={touched && error}\r\n        {...input}\r\n        {...custom}\r\n    />\r\n)\r\n\r\nconst MyWork = (props) => {\r\n    return (\r\n        <div>\r\n            <form onSubmit={props.handleSubmit}>\r\n                <div>\r\n                <Field className={s.field} validate={[requiredRieldValidator, maxLength100]} name={\"newPost\"} component={renderTextField}></Field>\r\n                </div>\r\n                <button className={s.button}><Button>Add new Work</Button></button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst MyWorkRedux = reduxForm({form: \"post\"})(MyWork)\r\n\r\nconst WorkContainerComponent = (props) => {\r\n    const onSubmit = (values) => {\r\n        props.addPost(props.userId, values.newPost)\r\n    }\r\n    return (\r\n        <MyWorkRedux onSubmit={onSubmit}/>\r\n    )\r\n\r\n}\r\n\r\nexport default WorkContainerComponent;","import React from \"react\";\r\nimport {reduxForm} from \"redux-form\";\r\nimport {Field} from \"redux-form\";\r\nimport {connect} from \"react-redux\";\r\nimport {setLogIn} from \"../../redux/authReducers\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {renderTextField} from \"../ToDoPost/toDoPost\";\r\nimport s from './login.module.css'\r\n\r\nconst LoginForm = ({handleSubmit}) => {\r\n    return (\r\n        <div>\r\n        <form className={s.form} onSubmit={handleSubmit}>\r\n            <div className={s.fields}>\r\n                <Field placeholder={\"login\"} name={\"login\"} component={renderTextField}/>\r\n            </div>\r\n            <div className={s.fields}>\r\n                <Field placeholder={\"Password\"} name={\"password\"} component={renderTextField}/>\r\n            </div>\r\n            <div className={s.fields}>\r\n                <button><Button placeholder={\"login\"}>Login</Button></button>\r\n            </div>\r\n        </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({form: \"login\"})(LoginForm)\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (values) => {\r\n        props.setLogIn(values.login, values.password)\r\n    }\r\n    return <LoginReduxForm onSubmit={onSubmit}/>\r\n\r\n}\r\nlet mapStateToProps = (state) => ({\r\n\r\n});\r\nexport const LoginContainer = connect(mapStateToProps, {setLogIn})(Login);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from \"react\";\r\nimport {reduxForm} from \"redux-form\";\r\nimport {Field} from \"redux-form\";\r\nimport {connect} from \"react-redux\";\r\nimport {setRegistration} from \"../../redux/authReducers\";\r\nimport {renderTextField} from \"../ToDoPost/toDoPost\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport s from './registration.module.css';\r\n\r\nconst RegistrationForm = ({handleSubmit}) => {\r\n    return (\r\n        <form className={s.form} onSubmit={handleSubmit}>\r\n            <div className={s.fields}>\r\n                <Field placeholder={\"first_name\"} name={\"first_name\"} component={renderTextField}/>\r\n            </div>\r\n            <div className={s.fields}>\r\n                <Field placeholder={\"last_name\"} name={\"last_name\"} component={renderTextField}/>\r\n            </div>\r\n            <div className={s.fields}>\r\n                <Field placeholder={\"email\"} name={\"email\"} component={renderTextField}/>\r\n            </div>\r\n            <div className={s.fields}>\r\n                <Field placeholder={\"Password\"} name={\"password\"} component={renderTextField}/>\r\n            </div>\r\n            <div className={s.fields}>\r\n                <Field placeholder={\"Password_confirmation\"} name={\"password_confirmation\"} component={renderTextField}/>\r\n            </div>\r\n            <div className={s.fields}>\r\n                <button><Button placeholder={\"registration\"}>Registration</Button></button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({form: \"registration\"})(RegistrationForm)\r\n\r\nconst Registration = (props) => {\r\n    const onSubmit = (values) => {\r\n        props.setRegistration(values.email, values.password, values.password_confirmation, values.first_name, values.last_name)\r\n    }\r\n    return <LoginReduxForm onSubmit={onSubmit}/>\r\n\r\n}\r\nlet mapStateToProps = (state) => ({\r\n\r\n});\r\nexport const RegistrationContainer = connect(mapStateToProps, {setRegistration})(Registration);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import {contactsAPI} from \"../API/API\";\r\n\r\nconst ADD_WORK = 'ADD_WORK';\r\nconst SET_TODO_EDIT_POINT = 'SET_TODO_EDIT_POINT';\r\nconst SET_TODOLIST = 'SET_TODOLIST';\r\nconst SET_EDIT_ELEMENT = 'SET_EDIT_ELEMENT';\r\nconst DELETE_EDIT_ELEMENT = 'DELETE_EDIT_ELEMENT';\r\nconst CHANGE_BATCH_DELETE = 'CHANGE_BATCH_DELETE';\r\nconst CHANGE_BATCH_DELETE_ALL = 'CHANGE_BATCH_DELETE_ALL';\r\nconst SORT_ALL = 'SORT_ALL';\r\n\r\nlet initialState = {\r\n    changeBatchDeleteAll: false,\r\n    editedElement: {id: 0},\r\n    newWork: \"\",\r\n    uncomplete: [],\r\n    complete: []\r\n};\r\n\r\nconst toDoReducer = (state = initialState, action) => {\r\n    let stateCopy = {\r\n        ...state,\r\n        uncomplete: [...state.uncomplete],\r\n        complete: [...state.complete],\r\n    };\r\n    switch (action.type) {\r\n        case SORT_ALL:\r\n            stateCopy.complete.sort((a,b) => (a.title > b.title) ? 1 : ((b.title > a.title) ? -1 : 0));\r\n            stateCopy.uncomplete.sort((a,b) => (a.title > b.title) ? 1 : ((b.title > a.title) ? -1 : 0));\r\n            return stateCopy;\r\n        case CHANGE_BATCH_DELETE_ALL:\r\n            stateCopy.changeBatchDeleteAll = !stateCopy.changeBatchDeleteAll;\r\n            stateCopy.complete.map(el => {el.batchDelete = stateCopy.changeBatchDeleteAll; return el} )\r\n            stateCopy.uncomplete.map(el => {el.batchDelete = stateCopy.changeBatchDeleteAll; return el} )\r\n            return stateCopy;\r\n        case CHANGE_BATCH_DELETE:\r\n            stateCopy.complete.map(el => {if (el.id === action.id){el.batchDelete = !el.batchDelete} return el} )\r\n            stateCopy.uncomplete.map(el => {if (el.id === action.id){el.batchDelete = !el.batchDelete} return el} )\r\n            return stateCopy;\r\n        case ADD_WORK:\r\n            action.newToDoPoint.batchDelete = false;\r\n            stateCopy.uncomplete.push(action.newToDoPoint);\r\n            return stateCopy;\r\n        case SET_EDIT_ELEMENT:\r\n            stateCopy.editedElement = action.element;\r\n            return stateCopy;\r\n        case DELETE_EDIT_ELEMENT:\r\n            stateCopy.complete = state.complete.filter(el => el.id !== action.id)\r\n            stateCopy.uncomplete = state.uncomplete.filter(el => el.id !== action.id)\r\n            return stateCopy;\r\n        case SET_TODO_EDIT_POINT:\r\n            debugger\r\n            stateCopy.complete = state.complete.filter(el => el.id !== action.data.id)\r\n            stateCopy.uncomplete = state.uncomplete.filter(el => el.id !== action.data.id)\r\n            if (action.data.done)\r\n            {stateCopy.complete.push(action.data)}\r\n            else\r\n            {stateCopy.uncomplete.push(action.data)}\r\n            return stateCopy;\r\n        case SET_TODOLIST:\r\n            action.data.map(el => el.batchDelete = false)\r\n            stateCopy.complete = action.data.filter(el => el.done === true)\r\n            stateCopy.uncomplete = action.data.filter(el => el.done !== true)\r\n            return stateCopy;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const addWorkActionCreator = (newToDoPoint) => ({type: 'ADD_WORK', newToDoPoint})\r\nexport const setToDoData = (data) => ({type: SET_TODOLIST, data});\r\nexport const setToDoEditPoint = (data) => ({type: SET_TODO_EDIT_POINT, data});\r\nexport const setEditedElement = (element) => ({type: SET_EDIT_ELEMENT, element});\r\nexport const deleteWorkActionCreator = (id) => ({type: DELETE_EDIT_ELEMENT, id});\r\nexport const batchDeleteActionCreator = (id) => ({type: CHANGE_BATCH_DELETE, id});\r\nexport const batchDeleteAllActionCreator = () => ({type: CHANGE_BATCH_DELETE_ALL,});\r\nexport const sortAC = () => ({type: SORT_ALL,});\r\n\r\n//добавляем новый воркпоинт\r\nexport const createToDoPointThunk = (userId, title) => (dispatch) => {\r\n    return contactsAPI.setToDoListPoint(userId, title)\r\n        .then(response => {\r\n            if (response.status === 201) {\r\n                let data = response.data\r\n                dispatch(addWorkActionCreator(data))\r\n            }\r\n        })\r\n}\r\n//сетаем всё туду контакта\r\nexport const getToDoListThunk = (userId) => (dispatch) => {\r\n    return contactsAPI.getToDoList(userId)\r\n        .then(response => {\r\n            if (response.status === 201) {\r\n                let data = response.data\r\n                dispatch(setToDoData(data))\r\n            }\r\n        })\r\n    }\r\n//санка для всех изсенений на беке\r\nexport const EditToDoPointThunk = (el) => (dispatch) => {\r\n    debugger\r\n    return contactsAPI.editToDoList(el.id, el.contact_id, el.title, el.description, el.priority, el.done, el.due_date)\r\n        .then(response => {\r\n            debugger\r\n            if (response.status === 201) {\r\n                let data = response.data\r\n                dispatch(setToDoEditPoint(data))\r\n            }\r\n        })\r\n}\r\n//видаляем воркпоинт\r\nexport const deleteToDoPointThunk = (id) => (dispatch) => {\r\n    return contactsAPI.deleteToDoListPoint(id)\r\n        .then(response => {\r\n            if (response.status === 200) {\r\n                dispatch(deleteWorkActionCreator(id))\r\n            }\r\n        })\r\n}\r\nexport const batchDeleteThunk = (ids) => (dispatch) => {\r\n    debugger\r\n    return ids.forEach(el => {\r\n        contactsAPI.deleteToDoListPoint(el)\r\n            .then(response => {\r\n                if (response.status === 200) {\r\n                    dispatch(deleteWorkActionCreator(el))\r\n                }\r\n            })\r\n        }\r\n    )\r\n}\r\nexport default toDoReducer;\r\n\r\n\r\n","import {connect} from \"react-redux\";\r\nimport {createToDoPointThunk} from \"../../redux/toDoReducer\";\r\nimport WorkContainerComponent from \"./toDoPost\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        userId: state.auth.userData.id,\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (contact_id, point) => {\r\n            dispatch(createToDoPointThunk(contact_id, point));\r\n        }\r\n    }\r\n}\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps) (WorkContainerComponent);\r\n\r\nexport default MyPostsContainer;","import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\n\r\nlet CompleteWork = (props) => {\r\n    return <div>\r\n        {\r\n            props.todo.complete.map(el =>\r\n                    <div key={el.id}>\r\n                <span>\r\n                    <div onClick={()=>{props.EditedElement(el)}}>\r\n                    <NavLink to={'/edit'}>\r\n                        <TextField id=\"outlined-basic\" value={el.title} variant=\"outlined\"/>\r\n                    </NavLink>\r\n                        </div>\r\n                        <Button variant=\"contained\" color=\"secondary\" onClick={() => {\r\n                            props.EditToDoPoint(el, el.done = false);\r\n                        }}>Uncomplete</Button>\r\n                    <Button variant=\"contained\" color=\"secondary\" onClick={() => {\r\n                        props.deleteToDoPoint(el.id);\r\n                    }}>Delete</Button>\r\n                     <Checkbox\r\n                         checked={el.batchDelete}\r\n                         onChange={() => {props.batchDelete(el.id);}}\r\n                         inputProps={{ 'aria-label': 'primary checkbox' }}\r\n                     />\r\n                </span>\r\n                    </div>\r\n            )\r\n        }\r\n    </div>\r\n}\r\nexport default CompleteWork;","import CompleteWork from \"./CompleteWork\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    batchDeleteActionCreator,\r\n    deleteToDoPointThunk,\r\n    EditToDoPointThunk,\r\n    setEditedElement\r\n} from \"../../../redux/toDoReducer\";\r\nimport React from \"react\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        todo: state.toDoPage,\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        EditToDoPoint: (el) => {\r\n            dispatch(EditToDoPointThunk(el));\r\n        },\r\n        EditedElement: (element) => {\r\n            dispatch(setEditedElement(element));\r\n        },\r\n        deleteToDoPoint: (id) => {\r\n            dispatch(deleteToDoPointThunk(id));\r\n        },\r\n        batchDelete: (id) => {\r\n            dispatch(batchDeleteActionCreator(id));\r\n        }\r\n    }\r\n}\r\nconst CompleteWorkComponent = connect(mapStateToProps, mapDispatchToProps) (CompleteWork);\r\n\r\nexport default CompleteWorkComponent;","import React from \"react\";\r\nimport {Button} from \"@material-ui/core\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\n\r\nlet UnCompleteWork = (props) => {\r\n    return <div>\r\n        {\r\n            props.todo.uncomplete.map(el =>\r\n                <div key={el.id}>\r\n                <span>\r\n                    <div>\r\n                        <NavLink to={'/edit'} onClick={() => {\r\n                            props.EditedElement(el)\r\n                        }}>\r\n                            <TextField id=\"outlined-basic\" value={el.title} variant=\"outlined\"/>\r\n                        </NavLink>\r\n                        <div>\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={() => {\r\n                        props.EditToDoPoint(el, el.done = true);\r\n                    }}>complete</Button>\r\n                    <Button variant=\"contained\" color=\"secondary\" onClick={() => {\r\n                        props.deleteToDoPoint(el.id);\r\n                    }}>Delete</Button>\r\n                        <Checkbox\r\n                            checked={el.batchDelete}\r\n                            onChange={() => {\r\n                                props.batchDelete(el.id);\r\n                            }}\r\n                            inputProps={{'aria-label': 'primary checkbox'}}\r\n                        />\r\n                        </div>\r\n                    </div>\r\n\r\n                </span>\r\n                </div>\r\n            )\r\n        }\r\n    </div>\r\n\r\n}\r\nexport default UnCompleteWork;","import {\r\n    batchDeleteActionCreator,\r\n    deleteToDoPointThunk,\r\n    EditToDoPointThunk,\r\n    setEditedElement\r\n} from \"../../../redux/toDoReducer\";\r\nimport {connect} from \"react-redux\";\r\nimport React from \"react\";\r\nimport UnCompleteWork from \"./UnCompleteWork\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        todo: state.toDoPage,\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        EditToDoPoint: (el) => {\r\n            dispatch(EditToDoPointThunk(el));\r\n        },\r\n        EditedElement: (element) => {\r\n            dispatch(setEditedElement(element));\r\n        },\r\n        deleteToDoPoint: (id) => {\r\n            dispatch(deleteToDoPointThunk(id));\r\n        },\r\n        batchDelete: (id) => {\r\n            dispatch(batchDeleteActionCreator(id));\r\n        }\r\n    }\r\n}\r\nconst UnCompleteWorkComponent = connect(mapStateToProps, mapDispatchToProps) (UnCompleteWork);\r\n\r\nexport default UnCompleteWorkComponent;","import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {batchDeleteAllActionCreator, batchDeleteThunk, sortAC} from \"../../redux/toDoReducer\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nlet BatchDelete = (props) => {\r\n    let deleteList = props.toDoPoints.complete.filter(el => el.batchDelete == true)\r\n        .concat(props.toDoPoints.uncomplete.filter(el => el.batchDelete == true)).map(el => el.id);\r\n    return <div>\r\n        <Button variant=\"contained\" color=\"secondary\" onClick={() => {\r\n            props.batchDeleteAll();\r\n        }}>Select All</Button>\r\n        <Button variant=\"contained\" color=\"secondary\" onClick={() => {\r\n            props.batchDelete(deleteList);\r\n        }}>Delete multiple</Button>\r\n        <Button variant=\"contained\" color=\"primary\" onClick={() => {\r\n            props.sort();\r\n        }}>Sort</Button>\r\n        </div>\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        toDoPoints: state.toDoPage\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        batchDeleteAll: () => {\r\n            dispatch(batchDeleteAllActionCreator());\r\n        },\r\n        batchDelete: (ids) => {\r\n            dispatch(batchDeleteThunk(ids));\r\n        },\r\n        sort: () => {\r\n            dispatch(sortAC());\r\n        },\r\n    }\r\n}\r\nconst BatchDeleteComponent = connect(mapStateToProps, mapDispatchToProps) (BatchDelete);\r\n\r\nexport default BatchDeleteComponent;","import React from 'react';\r\nimport MyPostsContainer from \"./ToDoPost/toDoPostContainer\";\r\nimport CompleteWorkComponent from \"./Complete_uncomplete/complete/CompleteWorkContainer\";\r\nimport UnCompleteWorkComponent from \"./Complete_uncomplete/uncomplete/UnCompleteWorkContainer\";\r\nimport s from './mainpage.module.css'\r\nimport {connect} from \"react-redux\";\r\nimport {getToDoListThunk} from \"../redux/toDoReducer\";\r\nimport BatchDeleteComponent from \"./Complete_uncomplete/batchDelete\";\r\n\r\nclass ToDo extends React.Component {\r\n    componentDidMount() {\r\n        if(this.props.userId !== 0){\r\n            this.props.getToDoListThunk(this.props.userId)\r\n        }\r\n\r\n    }\r\n    render() {\r\n        return (\r\n            <div className={s.contentWrapper}>\r\n                <div className={s.input}><MyPostsContainer/></div>\r\n                <div className={s.batchDelete}><BatchDeleteComponent/></div>\r\n                <div className={s.complete}><CompleteWorkComponent/></div>\r\n                <div className={s.uncomplete}><UnCompleteWorkComponent/></div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nlet mapStateToProps = (state) => ({\r\n    userId: state.auth.userData.id,\r\n});\r\n\r\n\r\nexport const ToDoContainer = connect(mapStateToProps, {getToDoListThunk}) (ToDo);\r\n","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst ExistElement = (props) => {\r\n    let time\r\n    if(props.editedElement.due_date !== null && props.editedElement.due_date !== undefined){\r\n        time = props.editedElement.due_date.substring(0, 10);\r\n    }else time = \"Время не указано\"\r\n        return(\r\n            <div>\r\n                <div><Typography variant=\"subtitle1\">Old title: {props.editedElement.title}</Typography></div>\r\n                <div><Typography variant=\"subtitle1\">Old description: {props.editedElement.description}</Typography></div>\r\n                <div><Typography variant=\"subtitle1\">Old priority: {props.editedElement.priority}</Typography></div>\r\n                <div><Typography variant=\"subtitle1\">Complete: {props.editedElement.done}</Typography></div>\r\n                <div><Typography variant=\"subtitle1\">Due_date: {time}</Typography></div>\r\n            </div>\r\n        )\r\n}\r\nlet mapStateToProps = (state) => ({\r\n    editedElement: state.toDoPage.editedElement,\r\n});\r\n\r\n\r\nconst ExistElementContainer = connect(mapStateToProps,)(ExistElement);\r\nexport default ExistElementContainer;\r\n\r\n","import React from \"react\";\r\nimport DateTimePicker from 'react-widgets/lib/DateTimePicker'\r\nimport moment from 'moment'\r\nimport momentLocaliser from 'react-widgets-moment'\r\nimport 'react-widgets/dist/css/react-widgets.css'\r\n\r\nmomentLocaliser(moment)\r\nconst renderDateTimePicker = ({ input: { onChange, value }, showTime }) =>\r\n    <DateTimePicker\r\n        onChange={onChange}\r\n        format=\"DD MMM YYYY\"\r\n        time={showTime}\r\n        value={!value ? null : new Date(value)}\r\n    />\r\n    export default renderDateTimePicker;","import React from \"react\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {connect} from \"react-redux\";\r\nimport {renderTextField} from \"../ToDoPost/toDoPost\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {EditToDoPointThunk} from \"../../redux/toDoReducer\";\r\nimport renderDateTimePicker from \"./datapicker\";\r\nimport {maxLengthValidator, minValueValidator, numberValidator, requiredRieldValidator} from \"../validators/validators\";\r\n\r\nconst maxLength100 = maxLengthValidator(100);\r\nconst minValue = minValueValidator(Date());\r\n\r\nconst EditToDo = ({handleSubmit}, props) => {\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <div>\r\n                <Field  validate={[requiredRieldValidator, maxLength100]} name={\"newPost\"} placeholder={\"title\"} name={\"title\"} component={renderTextField}/>\r\n            </div>\r\n            <div>\r\n                <Field placeholder={\"description\"} name={\"description\"} component={renderTextField}/>\r\n            </div>\r\n            <div>\r\n                <Field component={\"input\"} name={\"done\"} type={\"checkbox\"}/> Done?\r\n            </div>\r\n            <div>\r\n                <Field validate={[numberValidator]} placeholder={\"Priority(nember)\"} name={\"priority\"} component={renderTextField}/>\r\n            </div>\r\n            <div>\r\n                <label>Due date</label>\r\n                <Field\r\n                    validate={[minValue]}\r\n                    name=\"due_date\"\r\n                    showTime={false}\r\n                    component={renderDateTimePicker}\r\n                />\r\n            </div>\r\n            <div>\r\n                <button><Button placeholder={\"save\"}>Save</Button></button>\r\n\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst EditToDoForm = reduxForm({form: \"edit\"})(EditToDo)\r\n\r\nconst EditToDoReduxForm = (props) => {\r\n    const onSubmit = (values) => {\r\n        debugger\r\n        props.EditToDoPointThunk(values, values.contact_id=props.contact_id, values.id=props.editElement.id);\r\n    }\r\n    return <EditToDoForm onSubmit={onSubmit}/>\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        editElement: state.toDoPage.editedElement,\r\n        contact_id: state.auth.userData.id,\r\n    }\r\n}\r\nconst EditToDoReduxFormContainer = connect(mapStateToProps, {EditToDoPointThunk})(EditToDoReduxForm);\r\nexport default EditToDoReduxFormContainer;","import React from 'react';\r\nimport ExistElementContainer from \"./existDataOfEditPoint\";\r\nimport EditToDoReduxFormContainer from \"./editToDoPoint\";\r\nimport s from './editToDoPoint.module.css'\r\n\r\nconst EditToDoPointComponent = (props) => {\r\n\r\n    return (\r\n        <div className={s.contentWrapper}>\r\n            <EditToDoReduxFormContainer className={s.EditToDoReduxFormContainer}/>\r\n            <ExistElementContainer className={s.ExistElementContainer}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default EditToDoPointComponent;","import './App.css';\nimport HeaderContainer from \"./Header/headerContainer\";\nimport {LoginContainer} from \"./content/Login/login\";\nimport Route from \"react-router-dom/es/Route\";\nimport {BrowserRouter} from \"react-router-dom\";\nimport React from \"react\";\nimport {RegistrationContainer} from \"./content/registrationPage/registrationPage\";\nimport {ToDoContainer} from \"./content/mainPage\";\nimport EditToDoPointComponent from \"./content/editToDoPoint/editToDoPointComponent\";\n\nfunction App(props) {\n    return (\n        <BrowserRouter>\n            <div className=\"app-wrapper\">\n                <HeaderContainer className=\"header\"/>\n                <div className=\"app-wrapper-content\">\n                    <Route path='/profile' render={() => <ToDoContainer/>}/>\n                    <Route path='/login' render={() => <LoginContainer/>}/>\n                    <Route path='/registrate' render={() => <RegistrationContainer/>}/>\n                    <Route path='/edit' render={() => <EditToDoPointComponent/>}/>\n                </div>\n            </div>\n        </BrowserRouter>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport toDoReducer from \"./toDoReducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport {reducer as formReducer} from \"redux-form\";\r\nimport authReducer from \"./authReducers\";\r\n\r\nlet reducers = combineReducers({\r\n    toDoPage: toDoReducer,\r\n    form: formReducer,\r\n    auth: authReducer,\r\n});\r\n\r\nconst store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\nwindow.store = store;\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from \"./redux/reduxStore\";\nimport {Provider} from \"react-redux\";\n\nReactDOM.render(\n\n    <Provider store = {store}>\n    <App />\n    </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"registration_form__GAbWe\",\"fields\":\"registration_fields__3VMJ-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contentWrapper\":\"mainpage_contentWrapper__2nnWs\",\"input\":\"mainpage_input__Mr5Et\",\"complete\":\"mainpage_complete__RPaZx\",\"uncomplete\":\"mainpage_uncomplete__1ERY7\",\"batchDelete\":\"mainpage_batchDelete__1m1Uf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"header_header__26JZb\",\"loginBlock\":\"header_loginBlock__1NpDD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"login_form__2IFQP\",\"fields\":\"login_fields__KwWPm\"};"],"sourceRoot":""}