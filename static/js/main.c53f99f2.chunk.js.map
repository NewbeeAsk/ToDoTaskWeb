{"version":3,"sources":["Header/header.jsx","Header/headerContainer.jsx","API/API.js","redux/authReducers.js","content/validators/validators.js","content/ToDoPost/toDoPost.jsx","content/Login/login.jsx","content/registrationPage/registrationPage.jsx","redux/toDoReducer.js","content/ToDoPost/toDoPostContainer.jsx","content/Complete_uncomplete/complete/CompleteWork.jsx","content/Complete_uncomplete/complete/CompleteWorkContainer.jsx","content/Complete_uncomplete/uncomplete/UnCompleteWork.jsx","content/Complete_uncomplete/uncomplete/UnCompleteWorkContainer.jsx","content/Complete_uncomplete/batchDelete.jsx","content/mainPage.jsx","content/editToDoPoint/existDataOfEditPoint.jsx","content/editToDoPoint/datapicker.jsx","content/editToDoPoint/editToDoPoint.jsx","content/editToDoPoint/editToDoPointComponent.jsx","App.js","reportWebVitals.js","redux/reduxStore.js","index.js","content/mainpage.module.css","content/editToDoPoint/editToDoPoint.module.css"],"names":["Header","props","isAuth","userId","to","HeaderContainer","this","React","Component","connect","state","auth","instanse","axios","baseURL","contactsAPI","email","password","post","then","response","password_confirmation","contact_id","get","id","title","description","priority","done","due_date","patch","delete","SET_CONTACT_DATA","initialState","authentication_token","authReducer","action","type","requiredRieldValidator","value","maxLengthValidator","maxLength","length","numberValidator","isNaN","Number","undefined","maxLength100","renderTextField","label","input","meta","touched","invalid","error","custom","TextField","placeholder","helperText","MyWorkRedux","reduxForm","form","onSubmit","handleSubmit","Field","validate","name","component","Button","WorkContainerComponent","values","addPost","newPost","LoginReduxForm","LoginContainer","setLogIn","dispatch","status","data","setContactData","login","RegistrationContainer","setRegistration","ADD_WORK","SET_TODO_EDIT_POINT","SET_TODOLIST","SET_EDIT_ELEMENT","DELETE_EDIT_ELEMENT","CHANGE_BATCH_DELETE","CHANGE_BATCH_DELETE_ALL","SORT_ALL","changeBatchDeleteAll","editedElement","newWork","uncomplete","complete","setEditedElement","element","deleteWorkActionCreator","batchDeleteActionCreator","EditToDoPointThunk","el","setToDoEditPoint","deleteToDoPointThunk","toDoReducer","stateCopy","sort","a","b","map","batchDelete","newToDoPoint","push","filter","MyPostsContainer","point","CompleteWork","todo","onClick","EditedElement","variant","color","EditToDoPoint","deleteToDoPoint","Checkbox","checked","onChange","inputProps","CompleteWorkComponent","toDoPage","UnCompleteWork","UnCompleteWorkComponent","BatchDeleteComponent","toDoPoints","batchDeleteAll","ids","forEach","batchDeleteThunk","deleteList","concat","ToDo","getToDoListThunk","className","s","contentWrapper","ToDoContainer","setToDoData","ExistElementContainer","time","substring","Typography","momentLocaliser","moment","min","renderDateTimePicker","showTime","format","Date","minValue","EditToDoForm","EditToDoReduxFormContainer","editElement","EditToDoPointComponent","App","Route","path","render","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","reducers","combineReducers","formReducer","store","createStore","applyMiddleware","thunkMiddleware","window","ReactDOM","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.c53f99f2.chunk.js","sourcesContent":["import React from 'react';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Header = (props) => {\r\n    return (\r\n            <div>\r\n                {props.isAuth\r\n                    ? props.userId\r\n                    : <NavLink to={'/login'} >Login</NavLink>\r\n                }\r\n                <NavLink to={'/registrate'} >registrate</NavLink>\r\n                <NavLink to={'/profile'} >profile</NavLink>\r\n            </div>\r\n    );\r\n}\r\nexport default Header;","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport Header from \"./header\";\r\n\r\n\r\n\r\nclass HeaderContainer extends React.Component{\r\n\r\n   /* componentDidMount(props){\r\n\r\n        this.props.setMyProfile();\r\n    }*/\r\n    render() {\r\n        return(\r\n            <Header {...this.props}/>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    userId: state.auth.userId,\r\n})\r\n\r\n\r\n\r\nexport default connect(mapStateToProps,{})(HeaderContainer);\r\n\r\n\r\n","import * as axios from \"axios\";\r\n\r\nconst instanse = axios.create({\r\n        baseURL: \"https://to-do-task-server.herokuapp.com/\",\r\n    }\r\n)\r\n\r\nexport const contactsAPI = {\r\n    setContact(email, password) {\r\n        return instanse.post(`sessions`, {email: email, password: password})\r\n            .then(response => response);\r\n    },\r\n    setRegistr(email, password, password_confirmation) {\r\n        return instanse.post(`registrations`, {email: email, password: password, password_confirmation: password_confirmation})\r\n            .then(response => response);\r\n    },\r\n    getToDoList(contact_id) {\r\n        return instanse.get(`todo/${contact_id}`)\r\n            .then(response => response);\r\n    },\r\n    editToDoList(id, contact_id, title, description, priority, done, due_date) {\r\n        return instanse.patch(`todo/${id}`, {contact_id: contact_id, title: title, description: description, priority: priority, done: done, due_date: due_date})\r\n            .then(response => response);\r\n    },\r\n    setToDoListPoint(contact_id, title) {\r\n        return instanse.post(`todo`, {contact_id: contact_id, title: title})\r\n            .then(response => response);\r\n    },\r\n    deleteToDoListPoint(id) {\r\n        return instanse.delete(`todo/${id}`)\r\n            .then(response => response);\r\n    },\r\n}","import {contactsAPI} from \"../API/API\";\r\n\r\nconst SET_CONTACT_DATA = 'SET_CONTACT_DATA';\r\n\r\nlet initialState = {\r\n    userId: 1,\r\n    isAuth: false,\r\n    authentication_token: null,\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case SET_CONTACT_DATA:\r\n            return {...state, userId: action.userId, isAuth: true}\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport const setContactData = (id) => ({type: SET_CONTACT_DATA, userId: id});\r\n\r\n//криейт сешн, получаем токен\r\nexport const setLogIn = (email, password) => (dispatch) => {\r\n    return contactsAPI.setContact(email, password)\r\n        .then(response => {\r\n            if (response.status === 201) {\r\n                let id = response.data.id\r\n                dispatch(setContactData(id))\r\n            }\r\n        })\r\n}\r\n\r\n//регистрация\r\nexport const setRegistration = (email, password, password_confirmation) => (dispatch) => {\r\n    return contactsAPI.setRegistr(email, password, password_confirmation)\r\n        .then(response => {\r\n            if (response.status === 201) {\r\n                           }\r\n        })\r\n\r\n}\r\nexport default authReducer;","export const requiredRieldValidator = value => {\r\n    if (value) return undefined;\r\n    return 'This field cant be empty'\r\n}\r\n\r\nexport const maxLengthValidator = (maxLength) => value => {\r\n    if (value && value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n    return undefined;\r\n}\r\n\r\nexport const numberValidator = value => value && isNaN(Number(value)) ? 'Must be a number' : undefined\r\nexport const minValueValidator = min => value =>\r\n    value && value < min ? `Must be at least ${min}` : undefined\r\n\r\n","import React from \"react\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport {requiredRieldValidator, maxLengthValidator} from \"../validators/validators\";\r\n\r\nconst maxLength100 = maxLengthValidator(100);\r\n\r\nexport const renderTextField = ({\r\n                             label,\r\n                             input,\r\n                             meta: { touched, invalid, error },\r\n                             ...custom\r\n                         }) => (\r\n    <TextField\r\n        label={label}\r\n        placeholder={label}\r\n        error={touched && invalid}\r\n        helperText={touched && error}\r\n        {...input}\r\n        {...custom}\r\n    />\r\n)\r\n\r\nconst MyWork = (props) => {\r\n    return (\r\n        <div>\r\n            <form onSubmit={props.handleSubmit}>\r\n\r\n                <Field validate={[requiredRieldValidator, maxLength100]} name={\"newPost\"} component={renderTextField}></Field>\r\n                <button><Button>Add new Work</Button></button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst MyWorkRedux = reduxForm({form: \"post\"})(MyWork)\r\n\r\nconst WorkContainerComponent = (props) => {\r\n    const onSubmit = (values) => {\r\n        props.addPost(props.userId, values.newPost)\r\n    }\r\n    return (\r\n        <MyWorkRedux onSubmit={onSubmit}/>\r\n    )\r\n\r\n}\r\n\r\nexport default WorkContainerComponent;","import React from \"react\";\r\nimport {reduxForm} from \"redux-form\";\r\nimport {Field} from \"redux-form\";\r\nimport {connect} from \"react-redux\";\r\nimport {setLogIn} from \"../../redux/authReducers\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {renderTextField} from \"../ToDoPost/toDoPost\";\r\n\r\nconst LoginForm = ({handleSubmit}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <div>\r\n                <Field placeholder={\"login\"} name={\"login\"} component={renderTextField}/>\r\n            </div>\r\n            <div>\r\n                <Field placeholder={\"Password\"} name={\"password\"} component={renderTextField}/>\r\n            </div>\r\n            <div>\r\n                <button><Button placeholder={\"login\"}>Login</Button></button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({form: \"login\"})(LoginForm)\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (values) => {\r\n        props.setLogIn(values.login, values.password)\r\n    }\r\n    return <LoginReduxForm onSubmit={onSubmit}/>\r\n\r\n}\r\nlet mapStateToProps = (state) => ({\r\n\r\n});\r\nexport const LoginContainer = connect(mapStateToProps, {setLogIn})(Login);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from \"react\";\r\nimport {reduxForm} from \"redux-form\";\r\nimport {Field} from \"redux-form\";\r\nimport {connect} from \"react-redux\";\r\nimport {setRegistration} from \"../../redux/authReducers\";\r\nimport {renderTextField} from \"../ToDoPost/toDoPost\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst RegistrationForm = ({handleSubmit}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <div>\r\n                <Field placeholder={\"email\"} name={\"email\"} component={renderTextField}/>\r\n            </div>\r\n            <div>\r\n                <Field placeholder={\"Password\"} name={\"password\"} component={renderTextField}/>\r\n            </div>\r\n            <div>\r\n                <Field placeholder={\"Password_confirmation\"} name={\"password_confirmation\"} component={renderTextField}/>\r\n            </div>\r\n            <div>\r\n                <button><Button placeholder={\"registration\"}>Registration</Button></button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({form: \"registration\"})(RegistrationForm)\r\n\r\nconst Registration = (props) => {\r\n    const onSubmit = (values) => {\r\n        props.setRegistration(values.email, values.password, values.password_confirmation)\r\n    }\r\n    return <LoginReduxForm onSubmit={onSubmit}/>\r\n\r\n}\r\nlet mapStateToProps = (state) => ({\r\n\r\n});\r\nexport const RegistrationContainer = connect(mapStateToProps, {setRegistration})(Registration);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import {contactsAPI} from \"../API/API\";\r\n\r\nconst ADD_WORK = 'ADD_WORK';\r\nconst SET_TODO_EDIT_POINT = 'SET_TODO_EDIT_POINT';\r\nconst SET_TODOLIST = 'SET_TODOLIST';\r\nconst SET_EDIT_ELEMENT = 'SET_EDIT_ELEMENT';\r\nconst DELETE_EDIT_ELEMENT = 'DELETE_EDIT_ELEMENT';\r\nconst CHANGE_BATCH_DELETE = 'CHANGE_BATCH_DELETE';\r\nconst CHANGE_BATCH_DELETE_ALL = 'CHANGE_BATCH_DELETE_ALL';\r\nconst SORT_ALL = 'SORT_ALL';\r\n\r\nlet initialState = {\r\n    changeBatchDeleteAll: false,\r\n    editedElement: {id: 0},\r\n    newWork: \"\",\r\n    uncomplete: [],\r\n    complete: []\r\n};\r\n\r\nconst toDoReducer = (state = initialState, action) => {\r\n    let stateCopy = {\r\n        ...state,\r\n        uncomplete: [...state.uncomplete],\r\n        complete: [...state.complete],\r\n    };\r\n    switch (action.type) {\r\n        case SORT_ALL:\r\n            stateCopy.complete.sort((a,b) => (a.title > b.title) ? 1 : ((b.title > a.title) ? -1 : 0));\r\n            stateCopy.uncomplete.sort((a,b) => (a.title > b.title) ? 1 : ((b.title > a.title) ? -1 : 0));\r\n            return stateCopy;\r\n        case CHANGE_BATCH_DELETE_ALL:\r\n            stateCopy.changeBatchDeleteAll = !stateCopy.changeBatchDeleteAll;\r\n            stateCopy.complete.map(el => {el.batchDelete = stateCopy.changeBatchDeleteAll; return el} )\r\n            stateCopy.uncomplete.map(el => {el.batchDelete = stateCopy.changeBatchDeleteAll; return el} )\r\n            return stateCopy;\r\n        case CHANGE_BATCH_DELETE:\r\n            stateCopy.complete.map(el => {if (el.id === action.id){el.batchDelete = !el.batchDelete} return el} )\r\n            stateCopy.uncomplete.map(el => {if (el.id === action.id){el.batchDelete = !el.batchDelete} return el} )\r\n            return stateCopy;\r\n        case ADD_WORK:\r\n            action.newToDoPoint.batchDelete = false;\r\n            stateCopy.uncomplete.push(action.newToDoPoint);\r\n            return stateCopy;\r\n        case SET_EDIT_ELEMENT:\r\n            stateCopy.editedElement = action.element;\r\n            return stateCopy;\r\n        case DELETE_EDIT_ELEMENT:\r\n            stateCopy.complete = state.complete.filter(el => el.id !== action.id)\r\n            stateCopy.uncomplete = state.uncomplete.filter(el => el.id !== action.id)\r\n            return stateCopy;\r\n        case SET_TODO_EDIT_POINT:\r\n            debugger\r\n            stateCopy.complete = state.complete.filter(el => el.id !== action.data.id)\r\n            stateCopy.uncomplete = state.uncomplete.filter(el => el.id !== action.data.id)\r\n            if (action.data.done)\r\n            {stateCopy.complete.push(action.data)}\r\n            else\r\n            {stateCopy.uncomplete.push(action.data)}\r\n            return stateCopy;\r\n        case SET_TODOLIST:\r\n            action.data.map(el => el.batchDelete = false)\r\n            stateCopy.complete = action.data.filter(el => el.done === true)\r\n            stateCopy.uncomplete = action.data.filter(el => el.done !== true)\r\n            return stateCopy;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const addWorkActionCreator = (newToDoPoint) => ({type: 'ADD_WORK', newToDoPoint})\r\nexport const setToDoData = (data) => ({type: SET_TODOLIST, data});\r\nexport const setToDoEditPoint = (data) => ({type: SET_TODO_EDIT_POINT, data});\r\nexport const setEditedElement = (element) => ({type: SET_EDIT_ELEMENT, element});\r\nexport const deleteWorkActionCreator = (id) => ({type: DELETE_EDIT_ELEMENT, id});\r\nexport const batchDeleteActionCreator = (id) => ({type: CHANGE_BATCH_DELETE, id});\r\nexport const batchDeleteAllActionCreator = () => ({type: CHANGE_BATCH_DELETE_ALL,});\r\nexport const sortAC = () => ({type: SORT_ALL,});\r\n\r\n//добавляем новый воркпоинт\r\nexport const createToDoPointThunk = (userId, title) => (dispatch) => {\r\n    return contactsAPI.setToDoListPoint(userId, title)\r\n        .then(response => {\r\n            if (response.status === 201) {\r\n                let data = response.data\r\n                dispatch(addWorkActionCreator(data))\r\n            }\r\n        })\r\n}\r\n//сетаем всё туду контакта\r\nexport const getToDoListThunk = (userId) => (dispatch) => {\r\n    return contactsAPI.getToDoList(userId)\r\n        .then(response => {\r\n            if (response.status === 201) {\r\n                let data = response.data\r\n                dispatch(setToDoData(data))\r\n            }\r\n        })\r\n    }\r\n//санка для всех изсенений на беке\r\nexport const EditToDoPointThunk = (el) => (dispatch) => {\r\n    debugger\r\n    return contactsAPI.editToDoList(el.id, el.contact_id, el.title, el.description, el.priority, el.done, el.due_date)\r\n        .then(response => {\r\n            debugger\r\n            if (response.status === 201) {\r\n                let data = response.data\r\n                dispatch(setToDoEditPoint(data))\r\n            }\r\n        })\r\n}\r\n//видаляем воркпоинт\r\nexport const deleteToDoPointThunk = (id) => (dispatch) => {\r\n    return contactsAPI.deleteToDoListPoint(id)\r\n        .then(response => {\r\n            if (response.status === 200) {\r\n                dispatch(deleteWorkActionCreator(id))\r\n            }\r\n        })\r\n}\r\nexport const batchDeleteThunk = (ids) => (dispatch) => {\r\n    debugger\r\n    return ids.forEach(el => {\r\n        contactsAPI.deleteToDoListPoint(el)\r\n            .then(response => {\r\n                if (response.status === 200) {\r\n                    dispatch(deleteWorkActionCreator(el))\r\n                }\r\n            })\r\n        }\r\n    )\r\n}\r\nexport default toDoReducer;\r\n\r\n\r\n","import {connect} from \"react-redux\";\r\nimport {createToDoPointThunk} from \"../../redux/toDoReducer\";\r\nimport WorkContainerComponent from \"./toDoPost\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        userId: state.auth.userId,\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (contact_id, point) => {\r\n            dispatch(createToDoPointThunk(contact_id, point));\r\n        }\r\n    }\r\n}\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps) (WorkContainerComponent);\r\n\r\nexport default MyPostsContainer;","import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\n\r\nlet CompleteWork = (props) => {\r\n    return <div>\r\n        {\r\n            props.todo.complete.map(el =>\r\n                    <div key={el.id}>\r\n                <span>\r\n                    <div onClick={()=>{props.EditedElement(el)}}>\r\n                    <NavLink to={'/edit'}>\r\n                        <TextField id=\"outlined-basic\" value={el.title} variant=\"outlined\"/>\r\n                    </NavLink>\r\n                        </div>\r\n                        <Button variant=\"contained\" color=\"secondary\" onClick={() => {\r\n                            props.EditToDoPoint(el, el.done = false);\r\n                        }}>Uncomplete</Button>\r\n                    <Button variant=\"contained\" color=\"secondary\" onClick={() => {\r\n                        props.deleteToDoPoint(el.id);\r\n                    }}>Delete</Button>\r\n                     <Checkbox\r\n                         checked={el.batchDelete}\r\n                         onChange={() => {props.batchDelete(el.id);}}\r\n                         inputProps={{ 'aria-label': 'primary checkbox' }}\r\n                     />\r\n                </span>\r\n                    </div>\r\n            )\r\n        }\r\n    </div>\r\n}\r\nexport default CompleteWork;","import CompleteWork from \"./CompleteWork\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    batchDeleteActionCreator,\r\n    deleteToDoPointThunk,\r\n    EditToDoPointThunk,\r\n    setEditedElement\r\n} from \"../../../redux/toDoReducer\";\r\nimport React from \"react\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        todo: state.toDoPage,\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        EditToDoPoint: (el) => {\r\n            dispatch(EditToDoPointThunk(el));\r\n        },\r\n        EditedElement: (element) => {\r\n            dispatch(setEditedElement(element));\r\n        },\r\n        deleteToDoPoint: (id) => {\r\n            dispatch(deleteToDoPointThunk(id));\r\n        },\r\n        batchDelete: (id) => {\r\n            dispatch(batchDeleteActionCreator(id));\r\n        }\r\n    }\r\n}\r\nconst CompleteWorkComponent = connect(mapStateToProps, mapDispatchToProps) (CompleteWork);\r\n\r\nexport default CompleteWorkComponent;","import React from \"react\";\r\nimport {Button} from \"@material-ui/core\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\n\r\nlet UnCompleteWork = (props) => {\r\n    return <div>\r\n        {\r\n            props.todo.uncomplete.map(el =>\r\n                <div key={el.id}>\r\n                <span>\r\n                    <div>\r\n                        <NavLink to={'/edit'} onClick={() => {\r\n                            props.EditedElement(el)\r\n                        }}>\r\n                            <TextField id=\"outlined-basic\" value={el.title} variant=\"outlined\"/>\r\n                        </NavLink>\r\n                        <div>\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={() => {\r\n                        props.EditToDoPoint(el, el.done = true);\r\n                    }}>complete</Button>\r\n                    <Button variant=\"contained\" color=\"secondary\" onClick={() => {\r\n                        props.deleteToDoPoint(el.id);\r\n                    }}>Delete</Button>\r\n                        <Checkbox\r\n                            checked={el.batchDelete}\r\n                            onChange={() => {\r\n                                props.batchDelete(el.id);\r\n                            }}\r\n                            inputProps={{'aria-label': 'primary checkbox'}}\r\n                        />\r\n                        </div>\r\n                    </div>\r\n\r\n                </span>\r\n                </div>\r\n            )\r\n        }\r\n    </div>\r\n\r\n}\r\nexport default UnCompleteWork;","import {\r\n    batchDeleteActionCreator,\r\n    deleteToDoPointThunk,\r\n    EditToDoPointThunk,\r\n    setEditedElement\r\n} from \"../../../redux/toDoReducer\";\r\nimport {connect} from \"react-redux\";\r\nimport React from \"react\";\r\nimport UnCompleteWork from \"./UnCompleteWork\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        todo: state.toDoPage,\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        EditToDoPoint: (el) => {\r\n            dispatch(EditToDoPointThunk(el));\r\n        },\r\n        EditedElement: (element) => {\r\n            dispatch(setEditedElement(element));\r\n        },\r\n        deleteToDoPoint: (id) => {\r\n            dispatch(deleteToDoPointThunk(id));\r\n        },\r\n        batchDelete: (id) => {\r\n            dispatch(batchDeleteActionCreator(id));\r\n        }\r\n    }\r\n}\r\nconst UnCompleteWorkComponent = connect(mapStateToProps, mapDispatchToProps) (UnCompleteWork);\r\n\r\nexport default UnCompleteWorkComponent;","import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {batchDeleteAllActionCreator, batchDeleteThunk, sortAC} from \"../../redux/toDoReducer\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nlet BatchDelete = (props) => {\r\n    let deleteList = props.toDoPoints.complete.filter(el => el.batchDelete == true)\r\n        .concat(props.toDoPoints.uncomplete.filter(el => el.batchDelete == true)).map(el => el.id);\r\n    return <div>\r\n        <Button variant=\"contained\" color=\"secondary\" onClick={() => {\r\n            props.batchDeleteAll();\r\n        }}>Select All</Button>\r\n        <Button variant=\"contained\" color=\"secondary\" onClick={() => {\r\n            props.batchDelete(deleteList);\r\n        }}>Delete multiple</Button>\r\n        <Button variant=\"contained\" color=\"primary\" onClick={() => {\r\n            props.sort();\r\n        }}>Sort</Button>\r\n        </div>\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        toDoPoints: state.toDoPage\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        batchDeleteAll: () => {\r\n            dispatch(batchDeleteAllActionCreator());\r\n        },\r\n        batchDelete: (ids) => {\r\n            dispatch(batchDeleteThunk(ids));\r\n        },\r\n        sort: () => {\r\n            dispatch(sortAC());\r\n        },\r\n    }\r\n}\r\nconst BatchDeleteComponent = connect(mapStateToProps, mapDispatchToProps) (BatchDelete);\r\n\r\nexport default BatchDeleteComponent;","import React from 'react';\r\nimport MyPostsContainer from \"./ToDoPost/toDoPostContainer\";\r\nimport CompleteWorkComponent from \"./Complete_uncomplete/complete/CompleteWorkContainer\";\r\nimport UnCompleteWorkComponent from \"./Complete_uncomplete/uncomplete/UnCompleteWorkContainer\";\r\nimport s from './mainpage.module.css'\r\nimport {connect} from \"react-redux\";\r\nimport {getToDoListThunk} from \"../redux/toDoReducer\";\r\nimport BatchDeleteComponent from \"./Complete_uncomplete/batchDelete\";\r\n\r\nclass ToDo extends React.Component {\r\n    componentDidMount() {\r\n            this.props.getToDoListThunk(this.props.userId)\r\n    }\r\n    render() {\r\n        return (\r\n            <div className={s.contentWrapper}>\r\n                <div className={s.input}><MyPostsContainer/></div>\r\n                <div className={s.batchDelete}><BatchDeleteComponent/></div>\r\n                <div className={s.complete}><CompleteWorkComponent/></div>\r\n                <div className={s.uncomplete}><UnCompleteWorkComponent/></div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nlet mapStateToProps = (state) => ({\r\n    userId: state.auth.userId,\r\n});\r\n\r\n\r\nexport const ToDoContainer = connect(mapStateToProps, {getToDoListThunk}) (ToDo);\r\n","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst ExistElement = (props) => {\r\n    let time\r\n    if(props.editedElement.due_date !== null && props.editedElement.due_date !== undefined){\r\n        time = props.editedElement.due_date.substring(0, 10);\r\n    }else time = \"Время не указано\"\r\n        return(\r\n            <div>\r\n                <div><Typography variant=\"subtitle1\">Old title: {props.editedElement.title}</Typography></div>\r\n                <div><Typography variant=\"subtitle1\">Old description: {props.editedElement.description}</Typography></div>\r\n                <div><Typography variant=\"subtitle1\">Old priority: {props.editedElement.priority}</Typography></div>\r\n                <div><Typography variant=\"subtitle1\">Complete: {props.editedElement.done}</Typography></div>\r\n                <div><Typography variant=\"subtitle1\">Due_date: {time}</Typography></div>\r\n            </div>\r\n        )\r\n}\r\nlet mapStateToProps = (state) => ({\r\n    editedElement: state.toDoPage.editedElement,\r\n});\r\n\r\n\r\nconst ExistElementContainer = connect(mapStateToProps,)(ExistElement);\r\nexport default ExistElementContainer;\r\n\r\n","import React from \"react\";\r\nimport DateTimePicker from 'react-widgets/lib/DateTimePicker'\r\nimport moment from 'moment'\r\nimport momentLocaliser from 'react-widgets-moment'\r\nimport 'react-widgets/dist/css/react-widgets.css'\r\n\r\nmomentLocaliser(moment)\r\nconst renderDateTimePicker = ({ input: { onChange, value }, showTime }) =>\r\n    <DateTimePicker\r\n        onChange={onChange}\r\n        format=\"DD MMM YYYY\"\r\n        time={showTime}\r\n        value={!value ? null : new Date(value)}\r\n    />\r\n    export default renderDateTimePicker;","import React from \"react\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {connect} from \"react-redux\";\r\nimport {renderTextField} from \"../ToDoPost/toDoPost\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {EditToDoPointThunk} from \"../../redux/toDoReducer\";\r\nimport renderDateTimePicker from \"./datapicker\";\r\nimport {maxLengthValidator, minValueValidator, numberValidator, requiredRieldValidator} from \"../validators/validators\";\r\n\r\nconst maxLength100 = maxLengthValidator(100);\r\nconst minValue = minValueValidator(Date());\r\n\r\nconst EditToDo = ({handleSubmit}, props) => {\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <div>\r\n                <Field  validate={[requiredRieldValidator, maxLength100]} name={\"newPost\"} placeholder={\"title\"} name={\"title\"} component={renderTextField}/>\r\n            </div>\r\n            <div>\r\n                <Field placeholder={\"description\"} name={\"description\"} component={renderTextField}/>\r\n            </div>\r\n            <div>\r\n                <Field component={\"input\"} name={\"done\"} type={\"checkbox\"}/> Done?\r\n            </div>\r\n            <div>\r\n                <Field validate={[numberValidator]} placeholder={\"Priority(nember)\"} name={\"priority\"} component={renderTextField}/>\r\n            </div>\r\n            <div>\r\n                <label>Due date</label>\r\n                <Field\r\n                    validate={[minValue]}\r\n                    name=\"due_date\"\r\n                    showTime={false}\r\n                    component={renderDateTimePicker}\r\n                />\r\n            </div>\r\n            <div>\r\n                <button><Button placeholder={\"save\"}>Save</Button></button>\r\n\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst EditToDoForm = reduxForm({form: \"edit\"})(EditToDo)\r\n\r\nconst EditToDoReduxForm = (props) => {\r\n    const onSubmit = (values) => {\r\n        debugger\r\n        props.EditToDoPointThunk(values, values.contact_id=props.contact_id, values.id=props.editElement.id);\r\n    }\r\n    return <EditToDoForm onSubmit={onSubmit}/>\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        editElement: state.toDoPage.editedElement,\r\n        contact_id: state.auth.userId,\r\n    }\r\n}\r\nconst EditToDoReduxFormContainer = connect(mapStateToProps, {EditToDoPointThunk})(EditToDoReduxForm);\r\nexport default EditToDoReduxFormContainer;","import React from 'react';\r\nimport ExistElementContainer from \"./existDataOfEditPoint\";\r\nimport EditToDoReduxFormContainer from \"./editToDoPoint\";\r\nimport s from './editToDoPoint.module.css'\r\n\r\nconst EditToDoPointComponent = (props) => {\r\n\r\n    return (\r\n        <div className={s.contentWrapper}>\r\n            <EditToDoReduxFormContainer className={s.EditToDoReduxFormContainer}/>\r\n            <ExistElementContainer className={s.ExistElementContainer}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default EditToDoPointComponent;","import './App.css';\nimport HeaderContainer from \"./Header/headerContainer\";\nimport {LoginContainer} from \"./content/Login/login\";\nimport Route from \"react-router-dom/es/Route\";\nimport {BrowserRouter} from \"react-router-dom\";\nimport React from \"react\";\nimport {RegistrationContainer} from \"./content/registrationPage/registrationPage\";\nimport {ToDoContainer} from \"./content/mainPage\";\nimport EditToDoPointComponent from \"./content/editToDoPoint/editToDoPointComponent\";\n\nfunction App(props) {\n    return (\n        <BrowserRouter>\n            <div className=\"app-wrapper\">\n                <HeaderContainer className=\"header\"/>\n                <div className=\"app-wrapper-content\">\n                    <Route path='/profile' render={() => <ToDoContainer/>}/>\n                    <Route path='/login' render={() => <LoginContainer/>}/>\n                    <Route path='/registrate' render={() => <RegistrationContainer/>}/>\n                    <Route path='/edit' render={() => <EditToDoPointComponent/>}/>\n                </div>\n            </div>\n        </BrowserRouter>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport toDoReducer from \"./toDoReducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport {reducer as formReducer} from \"redux-form\";\r\nimport authReducer from \"./authReducers\";\r\n\r\nlet reducers = combineReducers({\r\n    toDoPage: toDoReducer,\r\n    form: formReducer,\r\n    auth: authReducer,\r\n});\r\n\r\nconst store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\nwindow.store = store;\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from \"./redux/reduxStore\";\nimport {Provider} from \"react-redux\";\n\nReactDOM.render(\n\n    <Provider store = {store}>\n    <App />\n    </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contentWrapper\":\"mainpage_contentWrapper__2nnWs\",\"input\":\"mainpage_input__Mr5Et\",\"complete\":\"mainpage_complete__RPaZx\",\"uncomplete\":\"mainpage_uncomplete__1ERY7\",\"batchDelete\":\"mainpage_batchDelete__1m1Uf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contentWrapper\":\"editToDoPoint_contentWrapper__3oKGF\",\"EditToDoReduxFormContainer\":\"editToDoPoint_EditToDoReduxFormContainer__1z5n6\",\"ExistElementContainer\":\"editToDoPoint_ExistElementContainer__14hAa\"};"],"sourceRoot":""}